# SPDX-FileCopyrightText: Copyright 2025 Carabiner Systems, Inc
# SPDX-License-Identifier: Apache-2.0

on:
  workflow_dispatch: {}
permissions:
  contents: read

name: govulncheck

jobs:
  govulncheck:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      attestations: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          repository: ${{ github.event.repository.owner.login }}/lab-vexable-repo
          ref: main

      - name: Setup bnd
        uses: carabiner-dev/actions/install/bnd@HEAD

      - name: Setup revex
        uses: carabiner-dev/actions/install/revex@HEAD
  
      # - name: "Run scanner"
      #   uses: google/osv-scanner-action/osv-scanner-action@119c605e0e6e6c491e092da25b0c752d109b0b43 # v2.0.0
      #   continue-on-error: true
      #   with:
      #     scan-args: |-
      #       --output=osv-results.json 
      #       --format=json
      #       .
      - name: Generate Golvulncheck VEX
        run: |
            go run golang.org/x/vuln/cmd/govulncheck@latest -format=openvex ./... | \
              revex --filter-status=not_affected \
                    --gvc-fix-purls \
                    --gvc-product-hash=sha-256:9d10014412bb8f127e0d8b41df590a8154a213035bfc7688d211bdaea9c56835 \
                    --gvc-product-id=git+https://github.com/${{ github.event.repository.owner.login }}/lab-vexable-repo@main > vulncheck.openvex.json
      -  name: "Sign and push attestation"
         env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         run: |
          cat vulncheck.openvex.json
          bnd predicate vulncheck.openvex.json \
            --type https://openvex.dev/ns \
            --subject=sha256:9d10014412bb8f127e0d8b41df590a8154a213035bfc7688d211bdaea9c56835 \
            > vulncheck.openvex.bundle.json
          bnd push github ${{github.repository}} vulncheck.openvex.bundle.json

      # - name: Verify Branch Policy
      #   run: |
      #       ampel verify \
      #         --subject=sha256:34c392aa1a59b8713996177675c06aa43379694015194d84d7050caea21562e3 \
      #         --policy policy/CRA-AI-2.a-XFORM.ampel.json \
      #         --attestation osv-results.json \
      #         --format=html >> $GITHUB_STEP_SUMMARY
      # - name: Print scan
      #   run: |
      #     cat osv-results.json
